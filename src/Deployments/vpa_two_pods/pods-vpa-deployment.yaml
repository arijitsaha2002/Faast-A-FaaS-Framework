
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pods-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pods-app
  template:
    metadata:
      labels:
        app: pods-app 
    spec:
      containers:
      - name: pods-app 
        image: arijitsaha2002/flask_app:0.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000 
        resources:
          limits:
            memory: 50Mi
          requests:
            cpu: 10m
---
apiVersion: v1
kind: Service
metadata:
  name: pods-service
  labels:
    app: pods-app
spec:
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 5000 
  selector:
    app: pods-app 
  type: LoadBalancer
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: vpa-development-pods
  namespace: default
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: pods-app
  updatePolicy:
    updateMode: Auto
  resourcePolicy:
    containerPolicies:
      - containerName: '*'
        minAllowed:
          cpu: 5m
          memory: 10Mi
        maxAllowed:
          cpu: 1
          memory: 50Mi
        controlledResources: 
        - cpu
        - memory
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /pods/(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: pods-service
            port:
              number: 8080 

